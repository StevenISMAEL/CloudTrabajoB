// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CloudTrabajoBimestral.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525032106_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Asistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fechaAsistencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("inscripcionId")
                        .HasColumnType("integer");

                    b.Property<int>("sesionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("inscripcionId");

                    b.HasIndex("sesionId");

                    b.ToTable("Asistencia");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Certificado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InscripcionID")
                        .HasColumnType("integer");

                    b.Property<string>("UrlDescarga")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fechaEmision")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("InscripcionID");

                    b.ToTable("Certificado");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Espacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Espacio");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("maxCapacity")
                        .HasColumnType("integer");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("EventoId")
                        .HasColumnType("integer");

                    b.Property<string>("ParticipanteCedula")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fechaInscripcion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteCedula");

                    b.ToTable("Inscripcion");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InscripcionID")
                        .HasColumnType("integer");

                    b.Property<bool>("estado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fechaPago")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("medioPago")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<double>("monto")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("InscripcionID");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Participante", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Cedula");

                    b.ToTable("Participante");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Ponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ponente");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Sesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EspacioID")
                        .HasColumnType("integer");

                    b.Property<int>("EventoID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("horaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("horaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EspacioID");

                    b.HasIndex("EventoID");

                    b.ToTable("Sesion");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.SesionPonente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PonenteId")
                        .HasColumnType("integer");

                    b.Property<int>("SesionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PonenteId");

                    b.HasIndex("SesionId");

                    b.ToTable("SesionPonente");
                });

            modelBuilder.Entity("PonenteSesion", b =>
                {
                    b.Property<int>("PonentesId")
                        .HasColumnType("integer");

                    b.Property<int>("SesionesId")
                        .HasColumnType("integer");

                    b.HasKey("PonentesId", "SesionesId");

                    b.HasIndex("SesionesId");

                    b.ToTable("PonenteSesion");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Asistencia", b =>
                {
                    b.HasOne("CloudTrabajoBimestral.Models.Inscripcion", "Inscripcion")
                        .WithMany("Asistencias")
                        .HasForeignKey("inscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudTrabajoBimestral.Models.Sesion", "Sesion")
                        .WithMany("Asistencias")
                        .HasForeignKey("sesionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");

                    b.Navigation("Sesion");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Certificado", b =>
                {
                    b.HasOne("CloudTrabajoBimestral.Models.Inscripcion", "Inscripcion")
                        .WithMany("Certificados")
                        .HasForeignKey("InscripcionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Inscripcion", b =>
                {
                    b.HasOne("CloudTrabajoBimestral.Models.Evento", "Evento")
                        .WithMany("Inscripciones")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudTrabajoBimestral.Models.Participante", "Participante")
                        .WithMany("Inscripciones")
                        .HasForeignKey("ParticipanteCedula");

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Pago", b =>
                {
                    b.HasOne("CloudTrabajoBimestral.Models.Inscripcion", "Inscripcion")
                        .WithMany("Pagos")
                        .HasForeignKey("InscripcionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Sesion", b =>
                {
                    b.HasOne("CloudTrabajoBimestral.Models.Espacio", "Espacio")
                        .WithMany("Sesiones")
                        .HasForeignKey("EspacioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudTrabajoBimestral.Models.Evento", "Evento")
                        .WithMany("Sesion")
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Espacio");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.SesionPonente", b =>
                {
                    b.HasOne("CloudTrabajoBimestral.Models.Ponente", "Ponente")
                        .WithMany()
                        .HasForeignKey("PonenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudTrabajoBimestral.Models.Sesion", "Sesion")
                        .WithMany()
                        .HasForeignKey("SesionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ponente");

                    b.Navigation("Sesion");
                });

            modelBuilder.Entity("PonenteSesion", b =>
                {
                    b.HasOne("CloudTrabajoBimestral.Models.Ponente", null)
                        .WithMany()
                        .HasForeignKey("PonentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudTrabajoBimestral.Models.Sesion", null)
                        .WithMany()
                        .HasForeignKey("SesionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Espacio", b =>
                {
                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Evento", b =>
                {
                    b.Navigation("Inscripciones");

                    b.Navigation("Sesion");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Inscripcion", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Certificados");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Participante", b =>
                {
                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("CloudTrabajoBimestral.Models.Sesion", b =>
                {
                    b.Navigation("Asistencias");
                });
#pragma warning restore 612, 618
        }
    }
}
